#~ Question 2.0 ~#

1) Mapping reads and calling variants for all 3 samples 

mkdir task_2 #~Create new directory for Task 2
(varcall) jovyan:~/Josephine/task_2$ cp ../../shared-team/task2q2/sample.* . #~ Copy the three samples to my directory.
(varcall) jovyan:~/Josephine/task_2$ cp ../../shared-team/task2q2/NC_000962.3.fa . #~ Copy the reference genome

#~~~ Mapping the reads for three samples into BAM files ~~~#

minimap2 -a -x sr NC_000962.3.fa sample.1.reads2.fq.gz sample.1.reads1.fq.gz | samtools view -h -F 0x900 - |samtools sort -O bam > mapped_reads1.bam

minimap2 -a -x sr NC_000962.3.fa sample.1.reads2.fq.gz sample.1.reads1.fq.gz | samtools view -h -F 0x900 - |samtools sort -O bam > mapped_reads2.bam

minimap2 -a -x sr NC_000962.3.fa sample.1.reads2.fq.gz sample.1.reads1.fq.gz | samtools view -h -F 0x900 - |samtools sort -O bam > mapped_reads3.bam
		#Minimap2 mapping of the forward and reverse Illumina reads against reference genome
		
samtools flagstat mapped_reads1.bam #Inspect the BAM files
samtools flagstat mapped_reads2.bam #Inspect the BAM files
samtools flagstat mapped_reads3.bam #Inspect the BAM files
		#Comments: Sample 1 has 1473800 mapped reads compared to 1470500 in sample 2 and 3
		#Comments: Sample 1 has few singletons (55) but this is negligible compared to the total number of reads. This doesn't suggest issues with sequencing/library preparation. 
		#Comments: No samples had QC-failed reads 


#~~~ Call variants ~~~# (Generate pileup with bcftools)
bcftools mpileup -Ou -f NC_000962.3.fa mapped_reads1.bam| bcftools call -vc -Ov > variants_Sample1.vcf
bcftools mpileup -Ou -f NC_000962.3.fa mapped_reads2.bam| bcftools call -vc -Ov > variants_Sample2.vcf
bcftools mpileup -Ou -f NC_000962.3.fa mapped_reads3.bam| bcftools call -vc -Ov > variants_Sample3.vcf
		#Create the VCF for each of the samples 

less -S variants_Sample1.vcf 
less -S variants_Sample2.vcf
less -S variants_Sample3.vcf
		#Comment: Sample 1 contains INDELs not present within sample 2 and 3.

samtools tview mapped_reads1.bam NC_000962.3.fa 
samtools tview mapped_reads2.bam NC_000962.3.fa 
samtools tview mapped_reads3.bam NC_000962.3.fa 
		#View pileup evidence

#~~~ Measure depth of coverage ~~~#
samtools depth -a mapped_reads1.bam > Sample1_depth.txt 
samtools depth -a mapped_reads2.bam > Sample2_depth.txt 
samtools depth -a mapped_reads3.bam > Sample3_depth.txt 
		#Produce depth of coverage files for each sample

cp get_depths.py  ~/task_2 
		#Copied the python script for depth of coverage 

python get_depths.py -i sample1_depth.txt -o coverage_1kb_means_s1.bed
python get_depths.py -i sample1_depth.txt -o coverage_1kb_means_s2.bed
python get_depths.py -i sample1_depth.txt -o coverage_1kb_means_s3.bed
		#Provides depth of coverage for 1kb bins of the sample genomes 

awk '$4 < 40' coverage_1kb_means_s1.bed > filtered_coverage_s1.bed
awk '$4 < 40' coverage_1kb_means_s2.bed > filtered_coverage_s1.bed
awk '$4 < 40' coverage_1kb_means_s3.bed > filtered_coverage_s1.bed
		#Uses "awk" to filter the 4th column for coverage depths <40X (Identify low coverage regions)
		#Comments: Expected first and last 1kb bins are <40X coverage but no other notable spikes of low coverage across the sample. 

awk '$4 > 60' coverage_1kb_means_s1.bed > hfiltered_coverage_s1.bed
awk '$4 > 60' coverage_1kb_means_s2.bed > hfiltered_coverage_s2.bed
awk '$4 > 60' coverage_1kb_means_s3.bed > hfiltered_coverage_s3.bed
		#Uses "awk" to filter the 4th column for coverage depths >60X (Identify high coverage regions)
		#Comments: Sample 1 has unusually high coverage (91-106X) in an 10kb region roughly coordinates 1245000-1255000 that is not found within sample's 2 and 3. Sample 2 and 3 have no regions across the genome that are above 63X coverage. 

- wc -l variants_Sample*.vcf 
		#Assess the number of lines within each of the samples VCF files.
		#Comment: Sample 1 has fewer genetic variations compare to sample 2 and 3. Can't rely on the interpretation due to the variant calls not indicative of the final alternative genome sequence. 

bcftools stats variant_sample1.vcf > stats_output1.txt
bcftools stats variant_sample2.vcf > stats_output2.txt
bcftools stats variant_sample3.vcf > stats_output3.txt
	#Performed bcftools statistics on the sample VCF files 
	#Comments: Notably, sample 1 has 57 indels whereas sample 2 and 3 do not have any indels. Review in the VCFs, all of the indels appear to be in the 1245000-1255000 coordinate range.

#~~~ Inspected GC-content of target region ~~~#

samtools view -h mapped_reads1.bam NC_000962:1245000-1255000 > extracted_reads1.sam
	#Slice out around the ~10kb region of sample 1 

samtools view -bS extracted_reads1.sam > extracted_reads1.bam
	#Convert SAM file to BAM file 

samtools stats extracted_reads1.bam
	#Inspecting the GC-content 

#~~~ Visualisation of the depth coverage of the samples ~~~#
python get_depths.py -i sample1_depth.txt -o coverage_1kb_means_s1.bed -p plot_coverage1.png
python get_depths.py -i sample2_depth.txt -o coverage_1kb_means_s2.bed -p plot_coverage2.png
python get_depths.py -i sample3_depth.txt -o coverage_1kb_means_s3.bed -p plot_coverage3.png

		#Calls the get_depths.py script with the plot_coverage() function that utilises pandas (convert depth file to a dataframe) and matplotlib pyplot (plot the mean depth by 1kn bin) for each of the samples. 
		#Comments: Uniform coverage (40-60X) across all three samples with coverage tailing off towards the ends of the genome (expected). Exceptional  spike of 90-100X coverage in 1000000-2000000 coordinate range. 


#~ Answers ~#

b) Which of the samples looks different - Identify which one and explain why you think it is different?

Sample 1 exhibits an unusual 10kb region with significantly higher spike coverage (91-106X) compared to the rest of the genome and samples 2 and 3. This region, roughly spanning coordinates 1245000-1255000, contains 57 unique INDELs and is not found in the other samples. 

c) What do you think could explain this? 

The anomalous 90-100x coverage within the ~10kb region (NC_000962:1245000-1255000) of sample 1 suggests a potential gene duplication event (copy number variation), a biological variation specific to this Mycobacterium tuberculosis strain. 

Artifacts such as sequencing/library preparation errors or sample contamination would typically manifest as global, non-uniform spurious coverage patterns across the entire genome, which is not observed in this case. Basic quality indicators (e.g. no QC-failed reads, negligible singleton rates in mapping) alongside uniform genome coverage (40-60X) and lack of ambiguous/discontinuous regions with visual inspect across samples suggests reliable genome assembly. Additionally, a gene inversion is unlikely as no significant changes in mapping quality (e.g. at breakpoints) or misalignments were observed.  

Inspecting GC-content  indicates the 10kb region lacks repetitive sequences and low-complexity areas that could artificially inflate coverage depth during sequencing. However, Mycobacterium tuberculosis high average GC-content makes it difficult to definitively confirm this.













